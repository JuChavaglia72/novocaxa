
/*
TITULO     : Controle de Caixa - Versao 3.20030922
DATA       : 22/09/03
PROGRAMA   : NOVOCI03.PRG
COMENTARIO : CADASTRO (Movimentos)
*/
 
#include "NOVOC.CH"
#include "NOVOCMOU.CH"
**
**BI [INI] I03.B01
**BI [FIM] I03.B01
**
MENSAGEM( "Aguarde abertura de arquivos" )
USE CADCLI INDEX CADCL001, CADCL002, CADCL003 NEW
USE MOVIMENT INDEX MOVIM004, MOVIM005, MOVIM006, MOVIM007, MOVIM008, MOVIM009 NEW
USE SERVICOS INDEX SERVI010, SERVI011 NEW
SELE MOVIMENT
**
**BI [INI] I03.B02
**BI [FIM] I03.B02
**
***
*** Inicio do bloco de substitui‡„o I03.B
COR( "MENU" )
@ LIN_MENU, 00
@ LIN_MENU, 01 SAY "Cadastro ³ Movimentos"
M->DU_PLICIDADE := .F.; M->MOSTRA_RESULTADO := .F.
M->RE_PETICAO := .T.
M->IN_CLUIR := .T.
PRIVATE NORECIBO, VENCIMENTO, RECEBIMENT, CLIENTE, RAZAO, SERVICO1, VLRSERV1
PRIVATE SERVICO2, VLRSERV2, SERVICO3, VLRSERV3, SERVICO4, VLRSERV4, SERVICO5
PRIVATE VLRSERV5, SERVICO6, VLRSERV6, TSERVICOS, BAIXADO
WHILE .T.
   **
   **BI [INI] I03.B03
   **BI [FIM] I03.B03
   **
   MENSAGEM( "Tecle <ESC> para retornar" )
   IF !( M->DU_PLICIDADE )
      **
      **BI [INI] I03.B04
      **BI [FIM] I03.B04
      **
      IF M->RE_PETICAO
         IF M->CNF_REP
            M->RE_PETICAO := .F.
         ENDIF
         //
         // -> Inicializa variaveis
         CARREG03( INCLUSAO )
      ELSE
         M->MOSTRA_RESULTADO := .T.
      ENDIF
   ELSE
      M->MOSTRA_RESULTADO := .T.
      **
      **BI [INI] I03.B05
      **BI [FIM] I03.B05
      **
   ENDIF
   //
   // -> Carrega tela de cadastro
   IF CARGET03( IIF( M->AL_TERAR, ALTERACAO, INCLUSAO ) ) = .F.
      IF M->AL_TERAR
         **
         **BI [INI] I03.B06
         **BI [FIM] I03.B06
         **
         CARREG03( ALTERACAO )
         M->MOSTRA_RESULTADO = .T.
         CARGET03( MOSTRA_PAG_1 )
         BEEP()
         IF PERG( "Registro j  cadastrado. Deseja alterar ?" ) = "S"
            **
            **BI [INI] I03.B07
            **BI [FIM] I03.B07
            **
            M->IN_CLUIR := .F.; M->DU_PLICIDADE := .T.
         ELSE
            **
            **BI [INI] I03.B08
            **BI [FIM] I03.B08
            **
            M->AL_TERAR := .F.
         ENDIF
         LOOP
      ENDIF
      **
      **BI [INI] I03.B09
      **BI [FIM] I03.B09
      **
      EXIT
   ENDIF
   **
   **BI [INI] I03.B10
   **BI [FIM] I03.B10
   **
   IF PERG( "Confirma as informa‡”es ?" ) = "N"
      //
      // -> Faz reedicao
      M->DU_PLICIDADE := .T.
      **
      **BI [INI] I03.B11
      **BI [FIM] I03.B11
      **
      LOOP
   ENDIF
   M->DU_PLICIDADE := .F.
   M->MOSTRA_RESULTADO := .F.
   **
   **BI [INI] I03.B12
   **BI [FIM] I03.B12
   **
   IF M->IN_CLUIR
      APPEND BLANK
   ELSE
      M->IN_CLUIR := .T.
   ENDIF
   //
   // -> Atualiza o banco de dados
   SALVAR03()
   COMMIT
ENDDO
MOUSE( DESLIGA )
RESTSCREEN( LIN_MENU + 1, 00, 23, 79, TELA_PRI )
MOUSE( LIGA )
**
**BI [INI] I03.B13
**BI [FIM] I03.B13
**
*** Final do bloco de substitui‡„o I03.B
***
 
FUNCTION VERI003( TIPO_ACAO )
//
// -> Funcao que verifica duplicidade no arquivo "MOVIMENT"
LOCAL REGISTRO := RECN(), ORDEM := INDEXORD()
IF LASTKEY() = T_CIMA; RETURN .T.; ENDIF
SET ORDER TO 5
SEEK M->NORECIBO
IF REGISTRO = RECN() .AND. TIPO_ACAO = ALTERACAO
   SET ORDER TO ORDEM
   RETURN .T.
ENDIF
IF !EOF()
   IF TIPO_ACAO = ALTERACAO
      BEEP(); MENSAGEM( "Registro j  cadastrado", 3 )
      GOTO REGISTRO
      RETURN .F.
   ELSE
      M->AL_TERAR := .T.
      CLEAR GETS
      SET ORDER TO ORDEM
      RETURN .T.
   ENDIF
ENDIF
SET ORDER TO ORDEM
GOTO REGISTRO
RETURN .T.
 
FUNCTION IFU03018( VALIDA )
IF VALIDA = NIL; VALIDA := .T.; ENDIF
//
// -> Funcao que faz calculo com campos numericos
M->TSERVICOS := M->VLRSERV1+M->VLRSERV2+M->VLRSERV3+M->VLRSERV4+M->VLRSERV5+M->VLRSERV6
@ 14, 64 SAY M->TSERVICOS PICT "@Z 99,999,999.99" COLOR CONTECOR[ 8 ]
RETURN .T.
 
FUNCTION PSQ03001( EDITAR )
//
// -> Funcao que faz pesquisas em outro banco de dados
IF EDITAR = NIL; EDITAR := .T.; ENDIF
SELE CADCLI  
SET ORDER TO 2
SEEK M->CLIENTE
M->RETOR_NO := .T.
IF ( EOF() .AND. LASTKEY() != T_CIMA ) .OR. M->TEC_F2
   IF EDITAR
      EDIT_ARQ( EMPTY( M->CLIENTE ) )
      IF LASTKEY() = T_ENTER
         M->CLIENTE := CODIGO
      ELSE
         M->RETOR_NO := .F.
      ENDIF
   ENDIF
ENDIF
IF M->RETOR_NO
   M->RAZAO := RAZAO
   @ 05, 32 SAY RAZAO COLOR CONTECOR[ 8 ]
ENDIF
SELE MOVIMENT
RETURN M->RETOR_NO
 
FUNCTION PSQ03002( EDITAR )
//
// -> Funcao que faz pesquisas em outro banco de dados
IF EDITAR = NIL; EDITAR := .T.; ENDIF
SELE SERVICOS
SET ORDER TO 1
SEEK M->SERVICO1
M->RETOR_NO := .T.
IF ( EOF() .AND. LASTKEY() != T_CIMA ) .OR. M->TEC_F2
   IF EDITAR
      EDIT_ARQ( EMPTY( M->SERVICO1 ) )
      IF LASTKEY() = T_ENTER
         M->SERVICO1 := CODIGO
      ELSE
         M->RETOR_NO := .F.
      ENDIF
   ENDIF
ENDIF
IF M->RETOR_NO
   M->SERVICO1 := CODIGO
   @ 07, 11 SAY CODIGO COLOR CONTECOR[ 8 ]
   @ 07, 17 SAY DESCRICAO COLOR CONTECOR[ 8 ]
ENDIF
SELE MOVIMENT
RETURN M->RETOR_NO
 
FUNCTION PSQ03003( EDITAR )
//
// -> Funcao que faz pesquisas em outro banco de dados
IF EDITAR = NIL; EDITAR := .T.; ENDIF
SELE SERVICOS
SET ORDER TO 1
SEEK M->SERVICO2
M->RETOR_NO := .T.
IF ( EOF() .AND. LASTKEY() != T_CIMA ) .OR. M->TEC_F2
   IF EDITAR
      EDIT_ARQ( EMPTY( M->SERVICO2 ) )
      IF LASTKEY() = T_ENTER
         M->SERVICO2 := CODIGO
      ELSE
         M->RETOR_NO := .F.
      ENDIF
   ENDIF
ENDIF
IF M->RETOR_NO
   M->SERVICO2 := CODIGO
   @ 08, 11 SAY CODIGO COLOR CONTECOR[ 8 ]
   @ 08, 17 SAY DESCRICAO COLOR CONTECOR[ 8 ]
ENDIF
SELE MOVIMENT
RETURN M->RETOR_NO
 
FUNCTION PSQ03004( EDITAR )
//
// -> Funcao que faz pesquisas em outro banco de dados
IF EDITAR = NIL; EDITAR := .T.; ENDIF
SELE SERVICOS
SET ORDER TO 1
SEEK M->SERVICO3
M->RETOR_NO := .T.
IF ( EOF() .AND. LASTKEY() != T_CIMA ) .OR. M->TEC_F2
   IF EDITAR
      EDIT_ARQ( EMPTY( M->SERVICO3 ) )
      IF LASTKEY() = T_ENTER
         M->SERVICO3 := CODIGO
      ELSE
         M->RETOR_NO := .F.
      ENDIF
   ENDIF
ENDIF
IF M->RETOR_NO
   M->SERVICO3 := CODIGO
   @ 09, 11 SAY CODIGO COLOR CONTECOR[ 8 ]
   @ 09, 17 SAY DESCRICAO COLOR CONTECOR[ 8 ]
ENDIF
SELE MOVIMENT
RETURN M->RETOR_NO
 
FUNCTION PSQ03005( EDITAR )
//
// -> Funcao que faz pesquisas em outro banco de dados
IF EDITAR = NIL; EDITAR := .T.; ENDIF
SELE SERVICOS
SET ORDER TO 1
SEEK M->SERVICO4
M->RETOR_NO := .T.
IF ( EOF() .AND. LASTKEY() != T_CIMA ) .OR. M->TEC_F2
   IF EDITAR
      EDIT_ARQ( EMPTY( M->SERVICO4 ) )
      IF LASTKEY() = T_ENTER
         M->SERVICO4 := CODIGO
      ELSE
         M->RETOR_NO := .F.
      ENDIF
   ENDIF
ENDIF
IF M->RETOR_NO
   M->SERVICO4 := CODIGO
   @ 10, 11 SAY CODIGO COLOR CONTECOR[ 8 ]
   @ 10, 17 SAY DESCRICAO COLOR CONTECOR[ 8 ]
ENDIF
SELE MOVIMENT
RETURN M->RETOR_NO
 
FUNCTION PSQ03006( EDITAR )
//
// -> Funcao que faz pesquisas em outro banco de dados
IF EDITAR = NIL; EDITAR := .T.; ENDIF
SELE SERVICOS
SET ORDER TO 1
SEEK M->SERVICO5
M->RETOR_NO := .T.
IF ( EOF() .AND. LASTKEY() != T_CIMA ) .OR. M->TEC_F2
   IF EDITAR
      EDIT_ARQ( EMPTY( M->SERVICO5 ) )
      IF LASTKEY() = T_ENTER
         M->SERVICO5 := CODIGO
      ELSE
         M->RETOR_NO := .F.
      ENDIF
   ENDIF
ENDIF
IF M->RETOR_NO
   M->SERVICO5 := CODIGO
   @ 11, 11 SAY CODIGO COLOR CONTECOR[ 8 ]
   @ 11, 17 SAY DESCRICAO COLOR CONTECOR[ 8 ]
ENDIF
SELE MOVIMENT
RETURN M->RETOR_NO
 
FUNCTION PSQ03007( EDITAR )
//
// -> Funcao que faz pesquisas em outro banco de dados
IF EDITAR = NIL; EDITAR := .T.; ENDIF
SELE SERVICOS
SET ORDER TO 1
SEEK M->SERVICO6
M->RETOR_NO := .T.
IF ( EOF() .AND. LASTKEY() != T_CIMA ) .OR. M->TEC_F2
   IF EDITAR
      EDIT_ARQ( EMPTY( M->SERVICO6 ) )
      IF LASTKEY() = T_ENTER
         M->SERVICO6 := CODIGO
      ELSE
         M->RETOR_NO := .F.
      ENDIF
   ENDIF
ENDIF
IF M->RETOR_NO
   M->SERVICO6 := CODIGO
   @ 12, 11 SAY CODIGO COLOR CONTECOR[ 8 ]
   @ 12, 17 SAY DESCRICAO COLOR CONTECOR[ 8 ]
ENDIF
SELE MOVIMENT
RETURN M->RETOR_NO
 
FUNCTION CARREG03( TIPO_ACAO )
//
// -> Carrega variaveis para entrada ou altercao de dados
**
**BI [INI] I03.B14
**BI [FIM] I03.B14
**
IF TIPO_ACAO = INCLUSAO
   GOTO BOTT
   SKIP
ENDIF
M->NORECIBO := MOVIMENT->NORECIBO
M->VENCIMENTO := MOVIMENT->VENCIMENTO
M->RECEBIMENT := MOVIMENT->RECEBIMENT
M->CLIENTE := MOVIMENT->CLIENTE
M->RAZAO := MOVIMENT->RAZAO
M->SERVICO1 := MOVIMENT->SERVICO1
M->VLRSERV1 := MOVIMENT->VLRSERV1
M->SERVICO2 := MOVIMENT->SERVICO2
M->VLRSERV2 := MOVIMENT->VLRSERV2
M->SERVICO3 := MOVIMENT->SERVICO3
M->VLRSERV3 := MOVIMENT->VLRSERV3
M->SERVICO4 := MOVIMENT->SERVICO4
M->VLRSERV4 := MOVIMENT->VLRSERV4
M->SERVICO5 := MOVIMENT->SERVICO5
M->VLRSERV5 := MOVIMENT->VLRSERV5
M->SERVICO6 := MOVIMENT->SERVICO6
M->VLRSERV6 := MOVIMENT->VLRSERV6
M->TSERVICOS := MOVIMENT->TSERVICOS
M->BAIXADO := MOVIMENT->BAIXADO
//
// -> Codigo automatico
IF TIPO_ACAO = INCLUSAO
   SET ORDER TO 5
   GOTO BOTT
   M->NORECIBO := STRZERO( VAL( FIELD->NORECIBO ) + 1, 10 )
ENDIF
**
**BI [INI] I03.B16
**BI [FIM] I03.B16
**
 
FUNCTION CARGET03( TIPO_ACAO )
//
// -> Formata a tela para entrada ou alteracao de dados
IF TIPO_ACAO != MOSTRA_PAG_1
   M->AL_TERAR := .F.
ENDIF
**
**BI [INI] I03.B17
**BI [FIM] I03.B17
**
JANELA( 3, 3, 21, 77, "Movimentos" )
**
**BI [INI] I03.B18
**BI [FIM] I03.B18
**
COR( "GETS" )
**
**BI [INI] I03.B21
**BI [FIM] I03.B21
**
IF M->MOSTRA_RESULTADO
   PSQ03001( .F. )
   PSQ03002( .F. )
   PSQ03003( .F. )
   PSQ03004( .F. )
   PSQ03005( .F. )
   PSQ03006( .F. )
   PSQ03007( .F. )
   IFU03018( .F. )
ENDIF
//
// -> Monta tela de cadastro
@  4,  4 SAY "Rec.:" GET M->NORECIBO PICTURE "@!" VALID VERI003( TIPO_ACAO )
@  4, 22 SAY "Vencimento:" GET M->VENCIMENTO
@  4, 43 SAY "Recebimento:" GET M->RECEBIMENT
@  5,  4 SAY "Cliente:" GET M->CLIENTE PICTURE "@!" VALID PSQ03001()
@  5, 18 SAY "Razao Social:" GET M->RAZAO PICTURE "@!"
@  7,  4 SAY "Cod.:-" GET M->SERVICO1 PICTURE "@!" VALID PSQ03002()
@  7, 63 SAY "R$:" GET M->VLRSERV1 PICTURE "@Z 999,999.99"
@  8,  9 SAY "-" GET M->SERVICO2 PICTURE "@!" VALID PSQ03003()
@  8, 63 SAY "R$:" GET M->VLRSERV2 PICTURE "@Z 999,999.99"
@  9,  9 SAY "-" GET M->SERVICO3 PICTURE "@!" VALID PSQ03004()
@  9, 63 SAY "R$:" GET M->VLRSERV3 PICTURE "@Z 999,999.99"
@ 10,  9 SAY "-" GET M->SERVICO4 PICTURE "@!" VALID PSQ03005()
@ 10, 63 SAY "R$:" GET M->VLRSERV4 PICTURE "@Z 999,999.99"
@ 11,  9 SAY "-" GET M->SERVICO5 PICTURE "@!" VALID PSQ03006()
@ 11, 63 SAY "R$:" GET M->VLRSERV5 PICTURE "@Z 999,999.99"
@ 12,  9 SAY "-" GET M->SERVICO6 PICTURE "@!" VALID PSQ03007()
@ 12, 63 SAY "R$:" GET M->VLRSERV6 PICTURE "@Z 999,999.99"
@ 14, 51 SAY "Total em R$:" GET M->TSERVICOS PICTURE "@Z 99,999,999.99" VALID IFU03018()
**
**BI [INI] I03.B24
**BI [FIM] I03.B24
**
IF TIPO_ACAO = MOSTRA_PAG_1
   CLEAR GETS
   RETURN .F.
ENDIF
IF TIPO_ACAO = CONSULTA .OR. TIPO_ACAO = EXCLUSAO
   CLEAR GETS
   IF TIPO_ACAO = EXCLUSAO
      RETURN .T.
   ENDIF
   MENSAGEM( "Tecle algo para continuar" )
   IF TEC_MOU( 0 ) = T_ESC
      RETURN .F.
   ENDIF
ELSE
   CURSOR( LIGA )
   READ
   CURSOR( DESLIGA )
   IF M->AL_TERAR
      RETURN .F.
   ENDIF
   IF LASTKEY() = T_ESC
      RETURN .F.
   ENDIF
ENDIF
RETURN .T.
 
FUNCTION SALVAR03
//
// -> Salva o conteudo das variaveis de entrada no arquivo
**
**BI [INI] I03.B27
**BI [FIM] I03.B27
**
MOVIMENT->NORECIBO := M->NORECIBO
MOVIMENT->VENCIMENTO := M->VENCIMENTO
MOVIMENT->RECEBIMENT := M->RECEBIMENT
MOVIMENT->CLIENTE := M->CLIENTE
MOVIMENT->RAZAO := M->RAZAO
MOVIMENT->SERVICO1 := M->SERVICO1
MOVIMENT->VLRSERV1 := M->VLRSERV1
MOVIMENT->SERVICO2 := M->SERVICO2
MOVIMENT->VLRSERV2 := M->VLRSERV2
MOVIMENT->SERVICO3 := M->SERVICO3
MOVIMENT->VLRSERV3 := M->VLRSERV3
MOVIMENT->SERVICO4 := M->SERVICO4
MOVIMENT->VLRSERV4 := M->VLRSERV4
MOVIMENT->SERVICO5 := M->SERVICO5
MOVIMENT->VLRSERV5 := M->VLRSERV5
MOVIMENT->SERVICO6 := M->SERVICO6
MOVIMENT->VLRSERV6 := M->VLRSERV6
MOVIMENT->TSERVICOS := M->TSERVICOS
MOVIMENT->BAIXADO := M->BAIXADO
**
**BI [INI] I03.B28
**BI [FIM] I03.B28
**
 
/* Final do programa NOVOCI03.PRG */